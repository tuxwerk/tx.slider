Functional Tests
================

This file demonstrates how you go about adding and removing an slider to different content on a Plone site.

   >>> from plone.testing.z2 import Browser
   >>> import transaction
    
   >>> browser = Browser(self.app)
   >>> browser.handleErrors = False
   >>> from tx.slider.testing import browserLogin
   >>> browserLogin(self.portal, browser)
   >>> from tx.slider.settings import PageSliderSettings

Lets make sure that links to add sliders are added across the board on all different content types. Should go to slider settings after you've added the slider.

Check Page type first,

   >>> browser.open(self.portal.absolute_url())
   >>> browser.getLink(id="document").click()
   >>> browser.getControl(name="title").value = "test-page"
   >>> browser.getControl("Save").click()
   >>> browser.getLink("Add slider").click()
   >>> browser.url
   'http://nohost/plone/test-page/@@tx-slider-settings'

Save the page url for later use

   >>> page_url = self.portal['test-page'].absolute_url()
    
Now a collection...

   >>> browser.open(self.portal.absolute_url())
   >>> browser.getLink(id="collection").click()
   >>> browser.getControl(name="title").value = "test-collection"
   >>> browser.getControl("Save").click()
   >>> browser.getLink("Add slider").click()
   >>> browser.url
   'http://nohost/plone/test-collection/@@tx-slider-settings'
    
A Folder

   >>> browser.open(self.portal.absolute_url())
   >>> browser.getLink(id="folder").click()
   >>> browser.getControl(name="title").value = "test-folder"
   >>> browser.getControl('Save').click()
   >>> browser.getLink("Add slider").click()
   >>> browser.url
   'http://nohost/plone/test-folder/@@tx-slider-settings'
    
A News Item

   >>> browser.open(self.portal.absolute_url())
   >>> browser.getLink(id="news-item").click()
   >>> browser.getControl(name="title").value = "test-news-item"
   >>> browser.getControl('Save').click()
   >>> browser.getLink("Add slider").click()
   >>> browser.url
   'http://nohost/plone/test-news-item/@@tx-slider-settings'
    
Let's get into the meat of this now.  From now on, we'll just play with the test page we created.

   >>> browser.getLink(text='test-page').click()

Make sure the Slider settings link is there and the remove slider link is there.

   >>> 'href="' + page_url + '/@@tx-slider-disable"' in browser.contents 
   True
   >>> 'href="' + page_url + '/@@tx-slider-settings"' in browser.contents 
   True
    
Go to the slider settings, edit the page, should bring you back to the page after your done

   >>> browser.getLink(text="Slider").click()
   >>> browser.getControl(name="form.sliderposition").value = ["below_content"]
   >>> browser.getControl(name="form.actions.apply").click()
   >>> browser.url
   'http://nohost/plone/test-page/@@tx-slider-settings'
    
Slider should not be in the page contents yet because there are no slides yet.

   >>> browser.open(page_url)
   >>> '<div class="tx-slider-container ' not in browser.contents
   True
    
add one slide so it'll actually show.

   >>> settings = PageSliderSettings(self.portal['test-page'])
   >>> settings.slides = [{'link_reference': None, 'image': None, 'image_type': None, 'html': 'a tile text', 'url': None, 'configuration': '', 'heading': '', 'uuid': 'uuidabcdefg'}]
   >>> transaction.commit()
    
Slider should now show.

   >>> browser.open(page_url)
   >>> '<div class="tx-slider-container ' in browser.contents
   True
    
Edit it again and hide it this time.

   >>> browser.getLink(text="Slider").click()
   >>> browser.getControl(name="form.show").value = False
   >>> browser.getControl(name="form.actions.apply").click()

It is hidden now.

   >>> browser.open(page_url)
   >>> '<div class="tx-slider-container ' in browser.contents
   False
    
Show it again now

   >>> browser.getLink(text="Slider").click()
   >>> browser.getControl(name="form.show").value = True
   >>> browser.getControl(name="form.actions.apply").click()
   >>> '<div class="tx-slider-container ' in browser.contents
   True
   
Add some slides now shall we? Well, can't do it with the browser testing here because the kupu widget we use doesn't have support without ajax.  So we'll just do some programming for it...

   >>> browser.getLink(text="Slider").click()
   >>> "add new slide" in browser.contents
   True

   >>> settings = PageSliderSettings(self.portal['test-page'])
    
Set the slides...

   >>> settings.slides = [{'link_reference': None, 'image': None, 'image_type': None, 'html': 'first slide text', 'url': None, 'configuration': '', 'heading': '', 'uuid': 'uuid111111'}, {'link_reference': None, 'image': None, 'image_type': None, 'html': 'second slide text', 'url': None, 'configuration': '', 'heading': '', 'uuid': 'uuid222222'}, {'link_reference': None, 'image': None, 'image_type': None, 'html': 'third slide text', 'url': None, 'configuration': '', 'heading': '', 'uuid': 'uuid333333'}]
   >>> transaction.commit()

Render the page again and make sure the slides are there.
   >>> browser.open(page_url)
   >>> 'first slide text' in browser.contents
   True
   >>> 'second slide text' in browser.contents
   True
   >>> 'third slide text' in browser.contents
   True
    
Go to the settings page and check a few things about our expected slider.

   >>> browser.getLink(text='Slider').click()

Check the wrapper structures are present for each of the slides.

   >>> browser.contents.count('div id="tx-slider-widget"')
   1
   >>> browser.contents.count('div class="tx-slide"')
   3
   >>> browser.contents.count('div class="tx-slide-text"')
   6

Make sure all the slide manipulation links are there...

   >>> 'href="' + page_url + '/@@tx-slider-edit?index=uuid111111"' in browser.contents
   True
   >>> 'href="' + page_url + '/@@tx-slider-edit?index=uuid222222"' in browser.contents
   True
   >>> 'href="' + page_url + '/@@tx-slider-edit?index=uuid333333"' in browser.contents
   True
   >>> 'href="' + page_url + '/@@tx-slides/uuid111111/@@remove-slide"' in browser.contents
   True
   >>> 'href="' + page_url + '/@@tx-slides/uuid222222/@@remove-slide"' in browser.contents
   True
   >>> 'href="' + page_url + '/@@tx-slides/uuid333333/@@remove-slide"' in browser.contents
   True

Now remove the last slide which was the first...

   >>> browser.getLink(url=page_url + '/@@tx-slides/uuid333333/@@remove-slide').click()
   >>> settings = PageSliderSettings(self.portal['test-page'])
   >>> "uuid333333" in browser.contents
   False
   >>> len(settings.slides)
   2
    
Should only show 2 slides now

   >>> browser.open(page_url)
   >>> 'first slide text' in browser.contents
   True
   >>> 'second slide text' in browser.contents
   True
   >>> 'third slide text' in browser.contents
   False

Remove the slider

   >>> browser.open(page_url)
   >>> browser.getLink(text="Remove slider").click()
   >>> "Add slider" in browser.contents
   True
   >>> '<div class="tx-slider-container ' in browser.contents
   False
